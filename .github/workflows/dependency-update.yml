name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  # Check for updates
  check-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated packages
        run: |
          echo "🔍 Checking for outdated packages..."
          npm outdated || echo "No outdated packages found"

      - name: Check for security vulnerabilities
        run: |
          echo "🔒 Checking for security vulnerabilities..."
          npm audit --audit-level moderate

      - name: Generate dependency report
        run: |
          echo "📊 Generating dependency report..."
          echo "# Dependency Report - $(date '+%B %d, %Y')" > DEPENDENCY_REPORT.md
          echo "" >> DEPENDENCY_REPORT.md
          echo "## 📦 Current Dependencies" >> DEPENDENCY_REPORT.md
          echo "" >> DEPENDENCY_REPORT.md
          echo "\`\`\`json" >> DEPENDENCY_REPORT.md
          cat package.json >> DEPENDENCY_REPORT.md
          echo "\`\`\`" >> DEPENDENCY_REPORT.md
          echo "" >> DEPENDENCY_REPORT.md
          echo "## 🔄 Outdated Packages" >> DEPENDENCY_REPORT.md
          echo "" >> DEPENDENCY_REPORT.md
          npm outdated >> DEPENDENCY_REPORT.md 2>&1 || echo "No outdated packages" >> DEPENDENCY_REPORT.md
          echo "" >> DEPENDENCY_REPORT.md
          echo "## 🔒 Security Audit" >> DEPENDENCY_REPORT.md
          echo "" >> DEPENDENCY_REPORT.md
          npm audit --audit-level moderate >> DEPENDENCY_REPORT.md 2>&1 || echo "No security issues found" >> DEPENDENCY_REPORT.md

  # Update dependencies
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    needs: check-updates
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update dependencies
        run: |
          echo "🔄 Updating dependencies..."
          
          # Update patch versions
          npm update
          
          # Check for major updates
          echo "📋 Checking for major updates..."
          npm outdated || echo "No major updates available"

      - name: Test updated dependencies
        run: |
          echo "🧪 Testing updated dependencies..."
          npm run build
          echo "✅ Build successful with updated dependencies"

      - name: Commit updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "chore: update dependencies

          - Updated npm packages to latest versions
          - Tested build with updated dependencies
          - No breaking changes detected" || echo "No changes to commit"

      - name: Create PR for major updates
        if: failure()
        run: |
          echo "⚠️ Major dependency updates detected"
          echo "Please review and test major updates manually"

  # Security updates
  security-updates:
    name: Security Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: |
          echo "🔒 Running security audit..."
          npm audit --audit-level moderate

      - name: Fix security issues
        run: |
          echo "🛠️ Attempting to fix security issues..."
          npm audit fix --force || echo "Some issues require manual intervention"

      - name: Test security fixes
        run: |
          echo "🧪 Testing security fixes..."
          npm run build
          echo "✅ Build successful after security fixes"

  # Documentation updates
  docs-update:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [check-updates, update-dependencies]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update documentation
        run: |
          echo "📝 Updating documentation..."
          
          # Update TECH_STACK.md with new dependency versions
          if [ -f "TECH_STACK.md" ]; then
            echo "Updating TECH_STACK.md with latest dependency information..."
            # Add current date to last updated
            sed -i "s/Last Updated:.*/Last Updated: $(date '+%B %d, %Y, %I:%M %p')/" TECH_STACK.md
          fi
          
          # Update PROJECT_CONTEXT.md
          if [ -f "PROJECT_CONTEXT.md" ]; then
            echo "Updating PROJECT_CONTEXT.md..."
            sed -i "s/Last Updated:.*/Last Updated: $(date '+%B %d, %Y, %I:%M %p')/" PROJECT_CONTEXT.md
          fi

      - name: Commit documentation updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add TECH_STACK.md PROJECT_CONTEXT.md
          git commit -m "docs: update documentation for dependency changes

          - Updated TECH_STACK.md with latest dependency information
          - Updated PROJECT_CONTEXT.md with current project state
          - Dependency update completed successfully" || echo "No documentation changes to commit"

  # Final status
  dependency-status:
    name: Dependency Update Status
    runs-on: ubuntu-latest
    needs: [check-updates, update-dependencies, security-updates, docs-update]
    if: always()
    steps:
      - name: Dependency Update Summary
        run: |
          echo "📊 Dependency Update Summary:"
          echo "✅ Check updates: ${{ needs.check-updates.result }}"
          echo "✅ Update dependencies: ${{ needs.update-dependencies.result }}"
          echo "✅ Security updates: ${{ needs.security-updates.result }}"
          echo "✅ Documentation updates: ${{ needs.docs-update.result }}"
          
          if [ "${{ needs.check-updates.result }}" == "success" ] && 
             [ "${{ needs.update-dependencies.result }}" == "success" ]; then
            echo "🎉 Dependency updates completed successfully!"
          else
            echo "⚠️ Some dependency updates may require manual review"
          fi
