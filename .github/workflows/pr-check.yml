name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Code Quality Checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check TypeScript (if applicable)
        run: npx tsc --noEmit --skipLibCheck || echo "No TypeScript files found"

      - name: Check for console.log statements
        run: |
          if grep -r "console\.log\|console\.warn\|console\.error" --include="*.js" --include="*.jsx" .; then
            echo "⚠️ Found console statements - consider removing for production"
          else
            echo "✅ No console statements found"
          fi

  # Build Verification
  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          echo "🔍 Verifying build output..."
          if [ -d ".next" ]; then
            echo "✅ Build successful"
            echo "📦 Build size:"
            du -sh .next/
          else
            echo "❌ Build failed"
            exit 1
          fi

  # Security Check
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for sensitive data
        run: |
          echo "🔍 Checking for sensitive data..."
          if grep -r -i "password\|secret\|key\|token" --include="*.js" --include="*.jsx" --include="*.json" .; then
            echo "⚠️ Found potential sensitive data - please review"
          else
            echo "✅ No sensitive data found"
          fi

  # Documentation Check
  docs-check:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation updates
        run: |
          echo "📚 Checking documentation..."
          
          # Check if any .md files were modified
          if git diff --name-only HEAD~1 HEAD | grep -E "\.md$"; then
            echo "✅ Documentation files were updated"
          else
            echo "ℹ️ No documentation changes detected"
          fi
          
          # Check for required documentation files
          required_docs=("PROJECT_CONTEXT.md" "TECH_STACK.md" "PROJECT_GUIDELINES.md")
          for doc in "${required_docs[@]}"; do
            if [ -f "$doc" ]; then
              echo "✅ $doc exists"
            else
              echo "❌ $doc missing"
            fi
          done

  # Performance Check
  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Analyze bundle size
        run: |
          echo "📊 Analyzing bundle size..."
          if [ -d ".next/static/chunks" ]; then
            echo "📦 JavaScript chunks:"
            ls -la .next/static/chunks/ | head -10
            echo "📦 CSS files:"
            ls -la .next/static/css/ | head -5
          fi

      - name: Check for large files
        run: |
          echo "🔍 Checking for large files..."
          find . -name "*.js" -o -name "*.css" -o -name "*.json" | xargs ls -la | awk '$5 > 100000 {print "Large file: " $9 " (" $5 " bytes)"}'

  # Accessibility Check
  a11y-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Check for accessibility issues
        run: |
          echo "♿ Checking for accessibility issues..."
          
          # Check for alt attributes in images
          if grep -r "<img" --include="*.js" --include="*.jsx" . | grep -v "alt="; then
            echo "⚠️ Found images without alt attributes"
          else
            echo "✅ All images have alt attributes"
          fi
          
          # Check for proper heading structure
          echo "📝 Checking heading structure..."
          if grep -r "<h[1-6]" --include="*.js" --include="*.jsx" .; then
            echo "✅ Found heading elements"
          fi

  # Final Status
  pr-status:
    name: PR Status
    runs-on: ubuntu-latest
    needs: [quality, build-check, security-check, docs-check, performance-check, a11y-check]
    if: always()
    steps:
      - name: Check all jobs
        run: |
          echo "🔍 Checking PR status..."
          if [ "${{ needs.quality.result }}" == "success" ] && 
             [ "${{ needs.build-check.result }}" == "success" ] && 
             [ "${{ needs.security-check.result }}" == "success" ]; then
            echo "✅ All checks passed - PR is ready for review!"
          else
            echo "❌ Some checks failed - please review and fix issues"
            exit 1
          fi
